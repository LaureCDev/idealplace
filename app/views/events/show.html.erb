<div class="container">
  <div class="row">
    <div class="col-sm-12">
     <!-- <div class="flash flash-success alert alert-dismissible fade show" role="alert">
        <span><strong>Yay!</strong> ðŸŽ‰ You have successfully created your event! Let's continue.</span>
          <a data-bs-dismiss="alert" aria-label="Close">
            <i class="fas fa-times"></i>
          </a>
      </div>
      -->
      <br>
    </div>
  </div>

  <h3>Event recapitulative</h3>
  <p>The event called "<%= @event.name %>" will take place on <%= @event.date %> at <%= @event.start_time %></p>
  <p>You invited your friends from group "<%= @selected_group_name %> "</p>


  <div class="d-flex bottom-top-margin">
    <!-- the persue choice/button should remove the buttons : delete and update  -->
    <button class="btn btn-success custom-margin"> Pursue event organization </button>

    <!-- update should direct to the edit event page -->
    <button class="btn btn-warning custom-margin"> Edit event </button>

    <!-- delete should destroy the event and bring back to the index page ? -->
    <button class="btn btn-danger custom-margin"> Cancel event </button>
    <%= link_to "EP", event_event_places_path(@event), class: "btn btn-warning custom-margin" %>
  </div>

  </div>
  <p class="custom-margin"> Please select a category of event </p>

  <!-- events/show.html.erb -->
  <button class="btn btn-light custom-margin category" data-category="Catering">Catering</button>
  <button class="btn btn-light custom-margin category" data-category="Entertainment">Entertainment</button>
  <button class="btn btn-light custom-margin category" data-category="Culture">Culture</button>

  <div class="row">

    <div class="col-md-6">
      <%= render partial: 'shared/filtered_places', locals: { places: @places } %>
    </div>
    <div class="col-md-6">
      <div style="width: 100%; height: 600px;"
        data-controller="map"
        data-map-markers-value="<%= @markers.to_json %>"
        data-map-api-key-value="<%= ENV['MAPBOX_API_KEY'] %>">
      </div>
    </div>


    <% @event_places.each do |event_place| %>
      <div class="col-md-4">
        <div class="card mb-4">
          <div class="card-body">
            <h5 class="card-title"><%= event_place.place.name %></h5>
            <p class="card-text"><%= event_place.place.address %></p>
            <ul class="list-group list-group-flush">
              <li class="list-group-item">Duration: <%= event_place.duration %> minutes</li>
              <li class="list-group-item">Distance: <%= event_place.distance %> km</li>
              <li class="list-group-item">Transport mode: <%= event_place.transport_mode %></li>
              <li class="list-group-item">Selected: <%= event_place.selected ? "Yes" : "No" %></li>
            </ul>
            
            <div style="position: absolute; bottom: 10px; right: 10px;">
            <%= link_to "choose", event_event_places_path(event_place.event), data: { turbo_method: :post } %>
            </div>
            <% if event_place.event = @event %>
              <p>Event_place added !</p>
            <% else %>
              <p>Event_place NOT added !</p>
            <% end %>
          </div>
        </div>
      </div>
      <% end %>

  </div>
</div>



<script>
  document.addEventListener('DOMContentLoaded', function() {
  const categoryButtons = document.querySelectorAll('.category');
  const placesContainer = document.querySelector('.places-container');

  categoryButtons.forEach(button => {
    button.addEventListener('click', function() {
      const category = this.getAttribute('data-category');

      fetch(`/events/<%= @event.id %>?category=${category}`, {
        headers: {
          'X-CSRF-Token': '<%= form_authenticity_token %>'
        }
      })
      .then(response => response.text())

      .then(data => {
        // Extract the necessary content from the fetched HTML
        const parser = new DOMParser();
        const parsedHTML = parser.parseFromString(data, 'text/html');
        const filteredPlaces = parsedHTML.querySelector('.places-container').innerHTML;

        // Update the places container with the filtered places
        placesContainer.innerHTML = filteredPlaces;
      })
      .catch(error => console.error('Error:', error));
    });
  });
});

</script>
